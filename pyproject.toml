[build-system]
requires = ["hatchling>=1.25"]
build-backend = "hatchling.build"

[project]
name = "hep-ml-templates"
version = "0.1.0"
description = "Block-based HEP ML pipeline templates: install whole pipelines or individual components."
readme = "README.md"
requires-python = ">=3.9"
license = "MIT"
authors = [{ name = "Arvind Tawker" }]
dependencies = [
  "numpy>=1.22",
  "pandas>=2.0",
  "scikit-learn>=1.2",
  "omegaconf>=2.3",
]

[project.optional-dependencies]
# Core framework (minimal dependencies)
core = ["omegaconf>=2.3", "numpy>=1.22", "pandas>=2.0"]

# Individual components
data-csv = ["pandas>=2.0"]
data-higgs = ["pandas>=2.0", "requests>=2.25"]
data-uproot = ["uproot>=5.0", "awkward>=2.0", "pandas>=2.0"]
model-xgb = ["xgboost>=1.7"]
model-decision-tree = ["scikit-learn>=1.2"]
model-random-forest = ["scikit-learn>=1.2"]
model-svm = ["scikit-learn>=1.2"]
model-mlp = ["scikit-learn>=1.2"]
model-adaboost = ["scikit-learn>=1.2"]
model-ensemble = ["scikit-learn>=1.2", "xgboost>=1.7"]
model-torch = ["torch>=2.2"]
model-lightning = ["torch>=2.2", "lightning>=2.2"]
model-gnn = ["torch-geometric>=2.5", "torch>=2.2"]
preprocessing = ["scikit-learn>=1.2"]
evaluation = ["scikit-learn>=1.2"]

# Algorithm-specific extras
xgb = ["xgboost>=1.7", "scikit-learn>=1.2"]
decision-tree = ["scikit-learn>=1.2"]
random-forest = ["scikit-learn>=1.2"]
svm = ["scikit-learn>=1.2"]
mlp = ["scikit-learn>=1.2"]
adaboost = ["scikit-learn>=1.2"]
ensemble = ["scikit-learn>=1.2", "xgboost>=1.7"]
torch = ["torch>=2.2", "lightning>=2.2"]
gnn = ["torch-geometric>=2.5", "torch>=2.2"]
autoencoder = ["torch>=2.2", "lightning>=2.2"]
transformer = ["torch>=2.2", "lightning>=2.2"]
cnn = ["torch>=2.2", "lightning>=2.2"]

# Development
dev = ["pytest>=7.3", "pytest-cov>=4.1", "ruff>=0.5", "black>=24.1", "pre-commit>=3.6"]

# Complete pipeline bundles
pipeline-xgb = [
  "omegaconf>=2.3", "numpy>=1.22", "pandas>=2.0", "scikit-learn>=1.2", "xgboost>=1.7"
]
pipeline-decision-tree = [
  "omegaconf>=2.3", "numpy>=1.22", "pandas>=2.0", "scikit-learn>=1.2"
]
pipeline-ensemble = [
  "omegaconf>=2.3", "numpy>=1.22", "pandas>=2.0", "scikit-learn>=1.2", "xgboost>=1.7"
]
pipeline-torch = [
  "omegaconf>=2.3", "numpy>=1.22", "pandas>=2.0", "scikit-learn>=1.2", "torch>=2.2", "lightning>=2.2"
]
pipeline-neural = [
  "omegaconf>=2.3", "numpy>=1.22", "pandas>=2.0", "scikit-learn>=1.2"
]
pipeline-gnn = [
  "omegaconf>=2.3", "numpy>=1.22", "pandas>=2.0", "scikit-learn>=1.2", "torch>=2.2", "torch-geometric>=2.5"
]
pipeline-autoencoder = [
  "omegaconf>=2.3", "numpy>=1.22", "pandas>=2.0", "scikit-learn>=1.2", "torch>=2.2", "lightning>=2.2"
]
all = [
  "omegaconf>=2.3", "numpy>=1.22", "pandas>=2.0", "scikit-learn>=1.2", 
  "xgboost>=1.7", "torch>=2.2", "lightning>=2.2", "torch-geometric>=2.5", "uproot>=5.0", "awkward>=2.0"
]

[project.scripts]
mlpipe = "mlpipe.cli.main:main"
mlpipe-manager = "mlpipe.cli.manager:main"

[tool.black]
line-length = 100

[tool.ruff]
line-length = 100

[tool.hatch.build.targets.wheel]
packages = ["src/mlpipe"]
